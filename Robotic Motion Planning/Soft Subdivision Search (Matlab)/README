March 12, 2016
Robotic Motion Planning, Spring 2016
Group Members (NYU Id):
	Eugen Hotaj (esh322)
	Evan Johnson (esj254)
	Ryan Cavanaugh (rc2442)
This is the collaborative work of all the named group members. 
Electronically Signed: Eugen Hotaj, Evan Johnson, Ryan Cavanaugh.
No other sources has been consulted
---------------------------------------------------------------------

TO RUN:
Select test case by changing the first line starting with "load".  Valid tests are test1, test2, test3, or test4.
Select the strategy by setting the line starting with "strategy = " to 'bfs' for breadth first search, or 'ran' for random.
Both need some time to run so please be patient!

----------------------------------------------------------------------

CODE DESCRIPTONS:

Box.split splits a box into 4 and assigns adjecency neighbors on all four sides. When deciding which boxes to add in the adjecency lists we look at the parent's (i.e box we just split up) adjecencies and only add an adjecent box if the distane between the appropriate side and the current box's center are less than the radious of the box. This ensures that we only add boxes as adjecencies if they share a side. 

Union Find - ufUnion unions two sets together
           - ufFind finds the representative of a set
           - Add --> we did not implement an add method since we just made a box have no parent (i.e be in it's own set) upon the box 
             creation (in the     Box.m constructor)
           
We also had our own verison of sep.m which did the exact same thing as the professor's code, so we just used the professor's version instead. 

Everythig else happens in main.m and is pretty self explanitory.

------------------------------------------------------------------------



           
            
